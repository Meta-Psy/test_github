# Функции: Большой или маленький шаблон выполнения какого-либо действия, которому присваивается название.
         # Шаблон способен как принимать, так и выводить информацию. Название применимо в любой части кода
def say_hello():
    print('Hello World')        # Табулция, как для if или for
say_hello()

def calc():                     # Можно указать переменные прям внутри функции
    print(3+5)                  # В этом случае их невозможно заменить на другие. Каждый раз будет тот же результат
    calc()
# Вывод информации
def create_list():              # Можно не применять код-действие внутри функции
    my_list = []                # Однако, переменную будет невозможно вывести из функции (Функция - бункер)
    return my_list              # Поэтому есть return. Он будет вбирать в себя окончательный ответ. И его можно вызвать
                                # return лишь ячейка хранения для ответа. Чтобы вывести ответ на экран требуется другая функция

# Ввод информации
def spam2(a):                   # В скобках можно указать переменную - параметр функции.
    print(a+6)                  # При этом внутри можно делать абсолютно любые действия с параметром функции
    spam2(3)                    # При выводе функции, можно указать для нее уже конкретное значение - аргумент

def spam2(a, b, c=7):           # Параметры бывают: обязательные (a, b) и необязательный (с). Если не указать с, то с=7
    print(a+b+c)                # Обязательные параметры должны быть указаны в любом случае
    spam2(3, 5)                 # В данном случае, необязательный параметр приравняется к 7

all_products = {'Склад': {'name': 'Хлеб', 'количество': 34}}
def get_products(a = 'name'):
    print(all_products['Склад'][a])
    get_products()

def spam1(*args):               # Если количество вводимых параметров вариабельно, лучше воспользоваться "*"
    return args                 # args - название переменной для параметров. Можно выбрать любое другое название
    print(spam1(1, 2, 3, 'Hello'))

def spam1(**kwargs):            # В случае работы со словарем, * не достаточно, т.к. словерь = ключ + значение (2 переменные)
    return kwargs               # Следовательно удваиваем звездочки: **. kwargs - key words arguments
    print(spam1(name= 'my1', age= 23))


